ggplot(novi_univerziteti, aes(x = toeflScore, y = major)) + geom_boxplot(outlier.colour = "red") + labs(title = "Ocena na TOEFL testu na osnovu smera studija",
x = "Ocena na TOEFL testu",
y = "Smer")
ggplot(novi_univerziteti, aes(x = researchExp, y = program)) + geom_boxplot(outlier.colour = "red") + labs(title = "Istraživačko iskustvo u odnosu na program studija",
x = "Istraživačko iskustvo",
y = "Program studija")
xtabs(~novi_univerziteti$researchExp)
length(unique(novi_univerziteti$researchExp))
length(which(novi_univerziteti$researchExp==0))/dim(novi_univerziteti)[1]*100
novi_univerziteti$researchExp = as.numeric(as.character(novi_univerziteti$researchExp))
novi_univerziteti$researchExp[novi_univerziteti$researchExp > 0] = 1
unique(novi_univerziteti$researchExp)
novi_univerziteti$researchExp = factor(novi_univerziteti$researchExp,
levels = c(0,1), labels = c("Bez iskustva","Sa iskustvom"))
#novi_univerziteti$researchExp[is.na(novi_univerziteti$researchExp)] = 0 cemu ovo
novi_univerziteti$researchExp=as.factor(novi_univerziteti$researchExp)
ggplot(novi_univerziteti) + geom_bar(aes(x = researchExp))
ggplot(novi_univerziteti, aes(x = greV)) + geom_boxplot(outlier.colour = "red") +
labs(title = "GRE-ov verbalni rezultat",
x = "greV",
y = "")
ggplot(novi_univerziteti, aes(x = greQ)) + geom_boxplot(outlier.colour = "red") +
labs(title = "GRE kvantitativni rezultat",
x = "greQ",
y = "")
ggplot(novi_univerziteti, aes(x = greA)) + geom_boxplot(outlier.colour = "red") +
labs(title = "GRE analitičko pisanje",
x = "greA",
y = "")
novi_univerziteti=novi_univerziteti[which(novi_univerziteti$greV>=0 & novi_univerziteti$greV<=800),]
novi_univerziteti=novi_univerziteti[which(novi_univerziteti$greQ>=0 & novi_univerziteti$greQ<=800),]
ggplot(novi_univerziteti, aes(x = greV)) + geom_boxplot(outlier.colour = "red") +
labs(title = "GRE-ov verbalni rezultat",
x = "greV",
y = "")
ggplot(novi_univerziteti, aes(x = greQ)) + geom_boxplot(outlier.colour = "red") +
labs(title = "GRE kvantitativni rezultat",
x = "greQ",
y = "")
novi_univerziteti=novi_univerziteti[which(novi_univerziteti$greA>=0 & novi_univerziteti$greA<=6),]
ggplot(novi_univerziteti, aes(x = greA)) + geom_boxplot(outlier.colour = "red") +
labs(title = "GRE analitičko pisanje",
x = "greA",
y = "")
ggplot(novi_univerziteti) + geom_boxplot( aes(x = internExp),outlier.colour = "red") + labs(title = "Staž iskustvo u mesecima",
x = "Staž iskustvo",
y = "")
xtabs(~novi_univerziteti$internExp)
length(unique(novi_univerziteti$internExp))
length(which(novi_univerziteti$internExp==0))/dim(novi_univerziteti)[1]*100
xtabs(~novi_univerziteti$internExp)
length(unique(novi_univerziteti$internExp))
length(which(novi_univerziteti$internExp==0))/dim(novi_univerziteti)[1]*100
novi_univerziteti$internExp = as.numeric(as.character(novi_univerziteti$internExp))
novi_univerziteti$internExp[novi_univerziteti$internExp > 0] = 1
unique(novi_univerziteti$internExp)
novi_univerziteti$internExp = factor(novi_univerziteti$internExp,
levels = c(0,1), labels = c("Bez staža","Sa stažom"))
#novi_univerziteti$internExp[is.na(novi_univerziteti$internExp)] = 0
novi_univerziteti$internExp=as.factor(novi_univerziteti$internExp)
ggplot(novi_univerziteti) + geom_bar(aes(x = internExp))
ggplot(novi_univerziteti) + geom_boxplot( aes(x = cgpa ),outlier.colour = "red") + labs(title = "Srednja prosečna ocena za procenu akademskog učinka",
x = "Srednja prosečna ocena",
y = "")
outlajeri = boxplot(novi_univerziteti$cgpa, plot = FALSE)$out
novi_univerziteti = novi_univerziteti[-which(novi_univerziteti$cgpa %in% outlajeri),]
ggplot(novi_univerziteti, aes(x = cgpa )) + geom_boxplot(outlier.colour = "red") + labs(title = "Srednja prosečna ocena za procenu akademskog učinka",
x = "Srednja prosečna ocena",
y = "")
ggplot(novi_univerziteti) + geom_boxplot( aes(x = industryExp ),outlier.colour = "red") + labs(title = "Industrijsko iskustvo u mesecima",
x = "Industrijsko iskustvo",
y = "")
novi_univerziteti=novi_univerziteti[-which(novi_univerziteti$industryExp>110),]
xtabs(~novi_univerziteti$industryExp)
length(unique(novi_univerziteti$industryExp))
length(which(novi_univerziteti$industryExp==0))/dim(novi_univerziteti)[1]*100
novi_univerziteti$industryExp = as.numeric(as.character(novi_univerziteti$industryExp))
novi_univerziteti$industryExp[novi_univerziteti$industryExp > 0] = 1
#unique(novi_univerziteti$industryExp)
novi_univerziteti$industryExp = factor(novi_univerziteti$industryExp,
levels = c(0,1), labels = c("Bez iskustva","Sa iskustvom"))
#novi_univerziteti$industryExp[is.na(novi_univerziteti$industryExp)] = 0
novi_univerziteti$industryExp=as.factor(novi_univerziteti$industryExp)
ggplot(novi_univerziteti) + geom_bar(aes(x = industryExp))
ggplot(novi_univerziteti, aes(y = year)) + geom_bar() + labs(title = "Godine kada su studenti konkurisali", x = "Godina", y = "Broj jedinstvenih vrednosti")
novi_univerziteti = novi_univerziteti[-which(novi_univerziteti$year != 2006 & novi_univerziteti$year != 2007 & novi_univerziteti$year != 2008 & novi_univerziteti$year != 2009
& novi_univerziteti$year != 2010 & novi_univerziteti$year != 2011 & novi_univerziteti$year != 2012 & novi_univerziteti$year != 2013
& novi_univerziteti$year != 2014 & novi_univerziteti$year != 2015 & novi_univerziteti$year != 2016),]
ggplot(novi_univerziteti, aes(x = year)) + geom_bar() + labs(title = "Godine kada su studenti konkurisali", x = "Godina", y = "Broj jedinstvenih vrednosti")
novi_univerziteti$year = droplevels(novi_univerziteti$year)
ggplot(novi_univerziteti) + geom_bar(aes(x = confPubs))
xtabs(~novi_univerziteti$confPubs)
length(unique(novi_univerziteti$confPubs))
length(which(novi_univerziteti$confPubs==0))/dim(novi_univerziteti)[1]*100
novi_univerziteti$confPubs = as.numeric(as.character(novi_univerziteti$confPubs))
novi_univerziteti$confPubs[novi_univerziteti$confPubs > 0] = 1
#unique(novi_univerziteti$confPubs)
novi_univerziteti$confPubs = factor(novi_univerziteti$confPubs,
levels = c(0,1), labels = c("Bez publikacije","Sa publikacijom"))
#novi_univerziteti$confPubs[is.na(novi_univerziteti$confPubs)] = 0
novi_univerziteti$confPubs=as.factor(novi_univerziteti$confPubs)
ggplot(novi_univerziteti) + geom_bar(aes(x = confPubs))
ggplot(novi_univerziteti) + geom_bar(aes(x = journalPubs))
xtabs(~novi_univerziteti$journalPubs)
length(unique(novi_univerziteti$journalPubs))
length(which(novi_univerziteti$journalPubs==0))/dim(novi_univerziteti)[1]*100
novi_univerziteti$journalPubs = as.numeric(as.character(novi_univerziteti$journalPubs))
novi_univerziteti$journalPubs[novi_univerziteti$journalPubs > 0] = 1
#unique(novi_univerziteti$journalPubs)
novi_univerziteti$journalPubs = factor(novi_univerziteti$journalPubs,
levels = c(0,1), labels = c("Bez publikacije","Sa publikacijom"))
#novi_univerziteti$journalPubs[is.na(novi_univerziteti$journalPubs)] = 0
novi_univerziteti$journalPubs=as.factor(novi_univerziteti$journalPubs)
ggplot(novi_univerziteti) + geom_bar(aes(x = journalPubs))
length(unique(novi_univerziteti$univName))
names=unique(novi_univerziteti$univName)
univ1=names[1:9]
univ2=names[10:18]
univ3=names[19:27]
univ4=names[28:36]
univ5=names[37:45]
univ6=names[46:54]
okvir1=novi_univerziteti[novi_univerziteti$univName %in%  univ1,]
okvir2=novi_univerziteti[novi_univerziteti$univName %in%  univ2,]
okvir3=novi_univerziteti[novi_univerziteti$univName %in%  univ3,]
okvir4=novi_univerziteti[novi_univerziteti$univName %in%  univ4,]
okvir5=novi_univerziteti[novi_univerziteti$univName %in%  univ5,]
okvir6=novi_univerziteti[novi_univerziteti$univName %in%  univ6,]
ggplot(okvir1, aes(x=admit,y=greV)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir1, aes(x=admit,y=greV)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir2, aes(x=admit,y=greV)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir2, aes(x=admit,y=greV)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir3, aes(x=admit,y=greV)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir3, aes(x=admit,y=greV)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir4, aes(x=admit,y=greV)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir4, aes(x=admit,y=greV)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir5, aes(x=admit,y=greV)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir5, aes(x=admit,y=greV)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir6, aes(x=admit,y=greV)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir6, aes(x=admit,y=greV)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
#K-S test normalnosti
novi_univerziteti %>% group_by(admit) %>%
summarise(izlaz = list(ks.test(greV, "pnorm", mean=mean(greV, na.rm = T),
sd=sd(greV, na.rm = T)) %>% tidy), .groups = 'drop') %>% unnest(c(izlaz))
ggplot(okvir1, aes(x=admit,y=greQ)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir1, aes(x=admit,y=greQ)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir2, aes(x=admit,y=greQ)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir2, aes(x=admit,y=greQ)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir3, aes(x=admit,y=greQ)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir3, aes(x=admit,y=greQ)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir4, aes(x=admit,y=greQ)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir4, aes(x=admit,y=greQ)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir5, aes(x=admit,y=greQ)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir5, aes(x=admit,y=greQ)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir6, aes(x=admit,y=greQ)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir6, aes(x=admit,y=greQ)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
#K-S test normalnosti
novi_univerziteti %>% group_by(admit) %>%
summarise(izlaz = list(ks.test(greQ, "pnorm", mean=mean(greQ, na.rm = T),
sd=sd(greQ, na.rm = T)) %>% tidy), .groups = 'drop') %>% unnest(c(izlaz))
ggplot(okvir1, aes(x=admit,y=greV)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir1, aes(x=admit,y=greA)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir2, aes(x=admit,y=greA)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir2, aes(x=admit,y=greV)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir3, aes(x=admit,y=greA)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir3, aes(x=admit,y=greA)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir4, aes(x=admit,y=greA)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir4, aes(x=admit,y=greA)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir5, aes(x=admit,y=greA)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir5, aes(x=admit,y=greA)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir6, aes(x=admit,y=greA)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir6, aes(x=admit,y=greA)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
#K-S test normalnosti
novi_univerziteti %>% group_by(admit) %>%
summarise(izlaz = list(ks.test(greA, "pnorm", mean=mean(greA, na.rm = T),
sd=sd(greA, na.rm = T)) %>% tidy), .groups = 'drop') %>% unnest(c(izlaz))
ggplot(okvir1, aes(x=admit,y=toeflScore)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir1, aes(x=admit,y=toeflScore)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir2, aes(x=admit,y=toeflScore)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir2, aes(x=admit,y=toeflScore)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir3, aes(x=admit,y=toeflScore)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir3, aes(x=admit,y=toeflScore)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir4, aes(x=admit,y=toeflScore)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir4, aes(x=admit,y=toeflScore)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir5, aes(x=admit,y=toeflScore)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir5, aes(x=admit,y=toeflScore)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir6, aes(x=admit,y=toeflScore)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir6, aes(x=admit,y=toeflScore)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
#K-S test normalnosti
novi_univerziteti %>% group_by(admit) %>%
summarise(izlaz = list(ks.test(toeflScore, "pnorm", mean=mean(toeflScore, na.rm = T),
sd=sd(toeflScore, na.rm = T)) %>% tidy), .groups = 'drop') %>% unnest(c(izlaz))
ggplot(okvir1, aes(x=admit,y=topperCgpa)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir1, aes(x=admit,y=topperCgpa)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir2, aes(x=admit,y=topperCgpa)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir2, aes(x=admit,y=topperCgpa)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir3, aes(x=admit,y=topperCgpa)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir3, aes(x=admit,y=topperCgpa)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir4, aes(x=admit,y=topperCgpa)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir4, aes(x=admit,y=topperCgpa)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir5, aes(x=admit,y=topperCgpa)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir5, aes(x=admit,y=topperCgpa)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir6, aes(x=admit,y=topperCgpa)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir6, aes(x=admit,y=topperCgpa)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
#K-S test normalnosti
novi_univerziteti %>% group_by(admit) %>%
summarise(izlaz = list(ks.test(topperCgpa, "pnorm", mean=mean(topperCgpa, na.rm = T),
sd=sd(topperCgpa, na.rm = T)) %>% tidy), .groups = 'drop') %>% unnest(c(izlaz))
ggplot(okvir1, aes(x=admit,y=cgpa)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir1, aes(x=admit,y=cgpa)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir2, aes(x=admit,y=cgpa)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir2, aes(x=admit,y=cgpa)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir3, aes(x=admit,y=cgpa)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir3, aes(x=admit,y=cgpa)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir4, aes(x=admit,y=cgpa)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir4, aes(x=admit,y=cgpa)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir5, aes(x=admit,y=cgpa)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir5, aes(x=admit,y=cgpa)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir6, aes(x=admit,y=cgpa)) +
geom_boxplot(alpha=1) + theme_bw()  + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(okvir6, aes(x=admit,y=cgpa)) +
geom_violin(alpha=1) +
theme_bw() + ylab(NULL)+theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) + facet_wrap(~ univName, nrow = 4,labeller = label_wrap_gen())
ggplot(novi_univerziteti, aes(x = cgpa, y=greA)) +
geom_point(aes(colour=admit)) +
xlab("Srednja prosečna ocena") +
ylab("Rezultat na GRE AWA testu")
plt1 <- ggplot(data = novi_univerziteti)+ geom_bar(mapping = aes(x = admit, fill = univName), position = "dodge")
plt1
plt2 <- ggplot(data = novi_univerziteti)+ geom_bar(mapping = aes(y = univName, fill = admit), position = "dodge")
plt2
plt1 = ggplot(novi_univerziteti, aes(x = admit, group = specialization)) +
geom_bar(aes(y = ..prop.., fill = specialization), stat = "count") +
geom_text(aes(label = scales::percent(..prop..), y = ..prop..), stat = "count", vjust = -.5) +
labs(y = "Percent", fill = "specialization") +
facet_grid(~specialization)
plt1
plt2 = ggplot(novi_univerziteti, aes(y = specialization, group = admit)) +
geom_bar(aes(x = ..prop.., fill = admit), stat = "count") +
geom_text(aes(label = scales::percent(..prop..), x = ..prop..), stat = "count", vjust = -.5) +
labs(x = "Percent", fill = "admit") +
facet_grid(~admit)
plt2
plt1 = ggplot(novi_univerziteti, aes(x = admit, group = major)) +
geom_bar(aes(y = ..prop.., fill = major), stat = "count") +
geom_text(aes(label = scales::percent(..prop..), y = ..prop..), stat = "count", vjust = -.5) +
labs(y = "Percent", fill = "major") +
facet_grid(~major)
plt1
plt2 = ggplot(novi_univerziteti, aes(y = major, group = admit)) +
geom_bar(aes(x = ..prop.., fill = admit), stat = "count") +
geom_text(aes(label = scales::percent(..prop..), x = ..prop..), stat = "count", vjust = -.5) +
labs(x = "Percent", fill = "admit") +
facet_grid(~admit)
plt2
plt1 = ggplot(novi_univerziteti, aes(x = admit, group = industryExp)) +
geom_bar(aes(y = ..prop.., fill = industryExp), stat = "count") +
geom_text(aes(label = scales::percent(..prop..), y = ..prop..), stat = "count", vjust = -.5) +
labs(y = "Percent", fill = "industryExp") +
facet_grid(~industryExp)
plt1
plt2 = ggplot(novi_univerziteti, aes(x = industryExp, group = admit)) +
geom_bar(aes(y = ..prop.., fill = admit), stat = "count") +
geom_text(aes(label = scales::percent(..prop..), y = ..prop..), stat = "count", vjust = -.5) +
labs(y = "Percent", fill = "admit") +
facet_grid(~admit)
plt2
plt1 = ggplot(novi_univerziteti, aes(x = admit, group = researchExp)) +
geom_bar(aes(y = ..prop.., fill = researchExp), stat = "count") +
geom_text(aes(label = scales::percent(..prop..), y = ..prop..), stat = "count", vjust = -.5) +
labs(y = "Percent", fill = "researchExp") +
facet_grid(~researchExp)
plt1
plt2 = ggplot(novi_univerziteti, aes(x = researchExp, group = admit)) +
geom_bar(aes(y = ..prop.., fill = admit), stat = "count") +
geom_text(aes(label = scales::percent(..prop..), y = ..prop..), stat = "count", vjust = -.5) +
labs(y = "Percent", fill = "admit") +
facet_grid(~admit)
plt2
plt1 = ggplot(novi_univerziteti, aes(x = admit, group = internExp)) +
geom_bar(aes(y = ..prop.., fill = internExp), stat = "count") +
geom_text(aes(label = scales::percent(..prop..), y = ..prop..), stat = "count", vjust = -.5) +
labs(y = "Percent", fill = "internExp") +
facet_grid(~internExp)
plt1
plt2 = ggplot(novi_univerziteti, aes(x = internExp, group = admit)) +
geom_bar(aes(y = ..prop.., fill = admit), stat = "count") +
geom_text(aes(label = scales::percent(..prop..), y = ..prop..), stat = "count", vjust = -.5) +
labs(y = "Percent", fill = "admit") +
facet_grid(~admit)
plt2
smp_siz = floor(0.75*nrow(novi_univerziteti))
smp_siz
set.seed(123)
# na slucajan nacin uzimamo uzorak 75% rednih brojeva redova
train_ind = sample(seq_len(nrow(novi_univerziteti)),size = smp_siz)
# kreiramo train sa rednim brojevima smestenim u train_ind
train = novi_univerziteti[train_ind,]
# kreiramo test sa preostalim podacima
test = novi_univerziteti[-train_ind,]
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA, toeflScore, cgpa, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
printcp(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA, toeflScore, cgpa, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA, toeflScore, cgpa, internExp, industryExp)),method="class")
rpart.plot(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA, toeflScore, cgpa, internExp)),method="class")
rpart.plot(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA, cgpa, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA, toeflScore, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
printcp(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit,  greV, greA, toeflScore, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA, toeflScore, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA, toeflScore, cgpa, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
printcp(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA, toeflScore, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
printcp(tree_model)
printcp(tree_model)
predTree = predict(tree_model,test, type="class")
conf = table(predTree, test$admit, dnn =c("Prediction","Action"))
conf
(precision = diag(conf) / sum(conf))
diag(conf)
sum(conf)
(precision = diag(conf) / sum(conf))
(recall = (diag(conf) / colSums(conf)))
colSums(conf)
(recall = (diag(conf) / colSums(conf)))
(precision = diag(conf) / sum(conf))
diag(conf)
sum(conf)
diag(conf)
(precision = diag(conf) / sum(conf))
sum(conf)
(recall = (diag(conf) / colSums(conf)))
(F1 = 2*precision*recall/(precision+recall))
precision*recall
2*precision*recall
(precision+recall)
sum(diag(conf)) / sum(conf)
xtabs(~novi_univerziteti$univName)
novi_univerziteti = novi_univerziteti[novi_univerziteti$univName != "California Institute of Technology",]
smp_siz = floor(0.75*nrow(novi_univerziteti))
smp_siz
set.seed(123)
# na slucajan nacin uzimamo uzorak 75% rednih brojeva redova
train_ind = sample(seq_len(nrow(novi_univerziteti)),size = smp_siz)
# kreiramo train sa rednim brojevima smestenim u train_ind
train = novi_univerziteti[train_ind,]
# kreiramo test sa preostalim podacima
test = novi_univerziteti[-train_ind,]
train$univName = droplevels(train$univName)
test$univName = droplevels(test$univName)
rf <- randomForest(admit ~ greA + greV + greQ + major + cgpa + toeflScore + univName, data = train)
rf.pred <- predict(rf,newdata = test)
rf
conf = table(rf.pred, test$admit, dnn =c("Prediction","Action"))
conf
(precision = diag(conf) / sum(conf))
(recall = (diag(conf) / colSums(conf)))
(F1 = 2*precision*recall/(precision+recall))
sum(diag(conf)) / sum(conf)
logistic_model <- glm(admit ~ univName + major + industryExp + cgpa + greV + greA + toeflScore,
data = train,
family = "binomial")
summary(logistic_model)
predict_reg <- predict(logistic_model,
test, type = "response")
predict_reg <- ifelse(predict_reg >0.5, 1, 0)
(conf = table(test$admit, predict_reg, dnn =c("Prediction","Action")))
(precision = diag(conf) / sum(conf))
(recall = (diag(conf) / colSums(conf)))
(F1 = 2*precision*recall/(precision+recall))
sum(diag(conf)) / sum(conf)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA, toeflScore, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA, toeflScore, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA, toeflScore, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA, toeflScore, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA, toeflScore, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA, toeflScore, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA, cgpa,toeflScore, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA,toeflScore, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA,toeflScore, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA,toeflScore, internExp, researchExp)),method="class")
rpart.plot(tree_model)
tree_model = rpart(admit ~ ., data=subset(train,select=c(admit, greQ, greV, greA,toeflScore, internExp, industryExp, researchExp)),method="class")
rpart.plot(tree_model)
